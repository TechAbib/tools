#! c:\perl\bin\perl.exe  

use Domain::PublicSuffix;
use DBI;  
use strict;  
use Getopt::Long;  
use Regexp::Common qw /URI/;  
use URI;
use List::MoreUtils qw/ uniq /;
 
my %config = ();  
Getopt::Long::Configure("prefix_pattern=(-|\/)");  
GetOptions(\%config, qw(file|f=s system|s=s user|u=s help|?|h));  
if ($config{help} || ! %config) {  
    _syntax();  
    exit 1;  
}  
die "You must enter a path.\n" unless ($config{file});  
#die "File not found.\n" unless (-e $config{file} && -f $config{file});  

my $file = $config{file};  
my @uniq_domains;
my $suffix = new Domain::PublicSuffix ({
    'data_file' => 'effective_tld_names.dat'
});

open( my $fh, '<', $file ) or die "Can't open $file: $!";
while ( my $line = <$fh> ) {
	my @url = $line =~ m/($RE{URI}{HTTP}{-scheme => qr(https?)})/g; 
	if($url[0]){
		my $temp_domain = URI->new( $url[0] );
		my $domain = $temp_domain->host;
		my $domain1 = getDomain($domain);
		push(@uniq_domains,$domain1);
		}
	}
	close $fh;
	
	my @unique = uniq @uniq_domains;
		foreach ( @unique ) {	
				if($_) {
				
					my $db = DBI->connect("dbi:SQLite:dbname=malwaredomainlist.sqlite","","") || die( "Unable to connect to database\n" );  
					my $all = $db->selectall_arrayref("SELECT domain,description from mdomain where domain LIKE '%$_%'");  
				
					foreach my $row (@$all) {  
						my ($maldomain,$description) = @$row;  	
						my @splitdomain = split('/',$maldomain);
						my @splitdomain = split(':',$splitdomain[0]);						
						my $tempmdomain = getDomain($splitdomain[0]);				
						if($_ eq $tempmdomain) {
							print $_.",".$maldomain.",".$description."\n";  
						}
					}		
				}
			}	

sub getDomain {

my $root = $suffix->get_root_domain($_[0]);
return $root;
}

 sub _syntax {  
 print<< "EOT";  
 malwaredomainlist.pl  
 [option]  
 Produce list of malware domain hits from timeline output 
  -f file..................path to timeline file  
  -h ......................Help (print this information)  

 **All times printed as GMT/UTC  
 copyright 2012 Sploit  
EOT
}   